"use strict";(self.webpackChunkltcgi=self.webpackChunkltcgi||[]).push([[974],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=p(n),h=r,u=m["".concat(s,".").concat(h)]||m[h]||c[h]||i;return n?a.createElement(u,o(o({ref:t},d),{},{components:n})):a.createElement(u,o({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},859:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:6},o="5\ufe0f\u20e3 The `LTCGI_Screen` component",l={unversionedId:"Getting Started/Setup/LTCGI_Screen",id:"Getting Started/Setup/LTCGI_Screen",title:"5\ufe0f\u20e3 The `LTCGI_Screen` component",description:"The LTCGI_Screen component is the most important part of LTCGI. This is what controls the emission of light into your scene.",source:"@site/docs/Getting Started/Setup/LTCGI_Screen.md",sourceDirName:"Getting Started/Setup",slug:"/Getting Started/Setup/LTCGI_Screen",permalink:"/Getting Started/Setup/LTCGI_Screen",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"4\ufe0f\u20e3 Setting up the Controller",permalink:"/Getting Started/Setup/Controller"},next:{title:"6\ufe0f\u20e3 Realtime Video",permalink:"/Getting Started/Setup/Realtime_Video"}},s={},p=[{value:"Mesh Rendering",id:"mesh-rendering",level:2},{value:"Component Settings",id:"component-settings",level:2},{value:"Basic Settings",id:"basic-settings",level:3},{value:"Light Settings",id:"light-settings",level:3},{value:"Color Mode",id:"color-mode",level:3},{value:"Affected Renderers",id:"affected-renderers",level:3},{value:"Lightmap Channel",id:"lightmap-channel",level:3}],d={toc:p};function c(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"5\ufe0f\u20e3-the-ltcgi_screen-component"},"5\ufe0f\u20e3 The ",(0,r.kt)("inlineCode",{parentName:"h1"},"LTCGI_Screen")," component"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"LTCGI_Screen")," component is the most important part of LTCGI. This is what controls the emission of light into your scene."),(0,r.kt)("p",null,"It must be placed on an object containing a ",(0,r.kt)("inlineCode",{parentName:"p"},"Mesh Filter")," (generally in combination with a ",(0,r.kt)("inlineCode",{parentName:"p"},"Mesh Renderer"),", but that part is not mandatory - you can have an invisible light source that way). Light will be emitted (and reflected) in the shape of the mesh selected on the ",(0,r.kt)("inlineCode",{parentName:"p"},"Mesh Filter"),". ",(0,r.kt)("strong",{parentName:"p"},"The mesh must have exactly 3 or 4 vertices!")," UV Maps are supported, so textured light sources (video or static) can be UV'd."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u26a0\ufe0f NOTE: There is also the ",(0,r.kt)("inlineCode",{parentName:"p"},"LTCGI_Emitter")," component, which can only emit non-textured, baked diffuse light, but has no geometry restrictions. ",(0,r.kt)("em",{parentName:"p"},"Most likely")," you want to use an ",(0,r.kt)("inlineCode",{parentName:"p"},"LTCGI_Screen")," component.")),(0,r.kt)("p",null,"To create a light source, place a 4-vertex mesh into your scene (Unity's built-in Quad will do) and add the component in the inspector window. If you have completed the previous step and are using an LTCGI-enabled material, you should see the mesh start to emit white light."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u26a0\ufe0f Note that disabling GameObjects or components with a screen or emitter on them is ",(0,r.kt)("strong",{parentName:"p"},"not supported"),', neither in editor nor in-game! Check "Basic Toggle" to see how you can enable or disable LTCGI globally. Setting the color to Black (0,0,0) will disable a single screen entirely, such that it can be re-enabled via ',(0,r.kt)("inlineCode",{parentName:"p"},"_SetColor")," using the ",(0,r.kt)("a",{parentName:"p",href:"/Advanced/Udon_Sharp_API"},"UdonSharp API"),".")),(0,r.kt)("p",null,"If it doesn't immediately work, try hitting \"CTRL-S\" to save your scene. This will force an LTCGI update as well, it's generally a good idea to keep hitting that while working on ",(0,r.kt)("del",{parentName:"p"},"an LTCGI project")," any Unity project. Backups as well, people!"),(0,r.kt)("video",{controls:!0,loop:!0,width:"100%"},(0,r.kt)("source",{src:"/vid/create_quad_1.webm"})),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"mesh-rendering"},"Mesh Rendering"),(0,r.kt)("p",null,"It is very important to understand that the component ",(0,r.kt)("em",{parentName:"p"},"only")," defines how the light is rendered. It does ",(0,r.kt)("em",{parentName:"p"},"not")," change the appearance of the mesh itself! For example, you can have a blue mesh with an orange light:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"blue mesh with orange light",src:n(381).Z,width:"868",height:"851"})),(0,r.kt)("p",null,"You need to ensure that the mesh itself looks the same as the light it emits yourself, usually by changing the normal material on the Renderer!"),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"component-settings"},"Component Settings"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"LTCGI_Screen component interface",src:n(6617).Z,width:"416",height:"497"})),(0,r.kt)("h3",{id:"basic-settings"},"Basic Settings"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Area light shape"),(0,r.kt)("td",{parentName:"tr",align:null},"Defines the type of light mesh. ",(0,r.kt)("inlineCode",{parentName:"td"},"Quad/Triangle")," allows you to use any mesh with 3 or 4 vertices. ",(0,r.kt)("inlineCode",{parentName:"td"},"Cylinder")," is ",(0,r.kt)("strong",{parentName:"td"},"experimental")," and allows you to define a cylindrical shape that will emit light.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Color"),(0,r.kt)("td",{parentName:"tr",align:null},"The base color of this light. Will also be applied on textured lights as a multiplier, leave as White (1,1,1) to show textures unmodified. ",(0,r.kt)("em",{parentName:"td"},"Supports HDR to increase brightness!"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Try get Color from Material"),(0,r.kt)("td",{parentName:"tr",align:null},"Tries to load the exact color used on the Renderer's material (as ",(0,r.kt)("inlineCode",{parentName:"td"},"_Color"),").")))),(0,r.kt)("h3",{id:"light-settings"},"Light Settings"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Diffuse Mode"),(0,r.kt)("td",{parentName:"tr",align:null},"Defines how the light emits diffuse light. Options are ",(0,r.kt)("inlineCode",{parentName:"td"},"No Diffuse")," to disable for performance, ",(0,r.kt)("inlineCode",{parentName:"td"},"LTC Diffuse")," to use the LTC algorithm's version of diffuse or ",(0,r.kt)("inlineCode",{parentName:"td"},"Lightmap Diffuse")," to directly use the data calculated in the ",(0,r.kt)("a",{parentName:"td",href:"/Advanced/Shadowmaps"},"Shadowmap")," bake. It is recommended to try these options in your particular environment, often times specular is enough, and diffuse can be left off for increased performance.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Specular"),(0,r.kt)("td",{parentName:"tr",align:null},"Determines if specular light is emitted (reflections).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Dynamic"),(0,r.kt)("td",{parentName:"tr",align:null},"Marks this screen as dynamic. Comes with slight performance overhead, but allows moving the screen and changing its color at runtime.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Double Sided"),(0,r.kt)("td",{parentName:"tr",align:null},"If this screen emits light on both sides of the mesh.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Flip UV"),(0,r.kt)("td",{parentName:"tr",align:null},"Workaround. Some models imported from Blender or other 3D software can have flipped reflections. If you notice this, you can set this flag to un-flip them. (If anyone can tell me why this happens and has a more permanent fix, please let me know!)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Affect Avatars"),(0,r.kt)("td",{parentName:"tr",align:null},"If this screen should affect avatars that use an LTCGI-compatible shader. Note that distance or renderer masking does not apply to avatars, so use this setting to keep performance-impact on avatars to a minimum.")))),(0,r.kt)("h3",{id:"color-mode"},"Color Mode"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Color Mode")," property describes where the color for the light is coming from. It has 4 options:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Static"),(0,r.kt)("td",{parentName:"tr",align:null},"The entire screen is lit up in the color set on the component.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Texture"),(0,r.kt)("td",{parentName:"tr",align:null},"The screen takes it's color values from a texture. This texture can be specified with the slider labeled ",(0,r.kt)("inlineCode",{parentName:"td"},"Texture Index"),", which will select either the live video texture (0) or any one of the ",(0,r.kt)("a",{parentName:"td",href:"/Advanced/Static_Textures"},"Static Textures")," you previously added to the Controller.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Single UV"),(0,r.kt)("td",{parentName:"tr",align:null},"Like ",(0,r.kt)("inlineCode",{parentName:"td"},"Texture"),", but will light up the screen in a single color taken from the texture at the exact UV coordinate you specify below.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Audio Link"),(0,r.kt)("td",{parentName:"tr",align:null},"See ",(0,r.kt)("a",{parentName:"td",href:"/Advanced/Audiolink"},"AudioLink"),".")))),(0,r.kt)("h3",{id:"affected-renderers"},"Affected Renderers"),(0,r.kt)("p",null,"Selects which Renderers in your scene should receive light from this screen. See the section on ",(0,r.kt)("a",{parentName:"p",href:"/Advanced/Performance_Optimization"},"Performance Optimization")," for more."),(0,r.kt)("h3",{id:"lightmap-channel"},"Lightmap Channel"),(0,r.kt)("p",null,"Selects which lightmap channel this screen will occupy when baking a shadowmap. See section on ",(0,r.kt)("a",{parentName:"p",href:"/Advanced/Shadowmaps"},"Shadowmaps")," for more."))}c.isMDXComponent=!0},381:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/ltcgi_mesh_color_mismatch-cfb86a0172dfe604b7c4bbfa25450a4b.jpg"},6617:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/ltcgi_screen_base-0ec13a3f34b944b15aba5a92e3d7297f.jpg"}}]);